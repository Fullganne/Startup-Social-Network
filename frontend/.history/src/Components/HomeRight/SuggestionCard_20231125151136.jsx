import React, { useContext, useEffect, useState } from "react"; import SuggestionCard from "./SuggestionCard"; import { UserContext } from "../../Context/UserContext"; import { Image } from "cloudinary-react"; import userService from "../../services/userService"; import followService from "../../services/followService";
const HomeRight = () => {     const { userData, handleFetchUsers } = useContext(UserContext);     const [user, setUser] = useState(userData);     const [followings, setFollowings] = useState(null); // Corrected this line     const [users, setUsers] = useState([]);
    useEffect(() => {         const fetchUsers = async () => {             try {                 console.log("Đang lấy tất cả USERS");                 const response = await userService.getAllUser();                 setUsers(response.data);             } catch (error) {                 console.error("Lỗi khi lấy dữ liệu người dùng:", error);             }         };
        fetchUsers();     }, []);
    useEffect(() => {         const fetchFollowings = async () => {             try {                 console.log("Đang lấy danh sách theo dõi của user");                 const response = await followService.getFollowings(userData.id);                 console.log("Followings API Response:", response);                 setFollowings(response.data);                 console.log("Following");                 console.log(response.data);             } catch (error) {                 console.error("Lỗi khi lấy danh sách theo dõi:", error);             }         };
        fetchFollowings();     }, []);
    useEffect(() => {         // Update user state when userData changes         setUser(userData);     }, [userData]);
    console.log("right :", user);     return (                                                                                                             <Image                                 cloudName="da0ikowpn"                                 publicId={userData.avatar}                                 className="object-cover w-14 h-14 rounded-full"                                 alt="Avatar"                             />                                                                                                             {user?.username}                                                         {/* {userData?.username} */}                                                                 Switch                            
                                                Suggested for you                                 {users                     .filter((item) => item.id !== userData.id)                     .slice(0, 5)                     .map((item) => (                         <SuggestionCard                             key={item.id}                             user={item}                             followings={followings || []}                         />                     ))}                         ); };
export default HomeRight;
import React, { useContext, useState, useEffect } from "react"; import { UserContext } from "../../Context/UserContext"; import { Image } from "cloudinary-react"; import followService from "../../services/followService";
const SuggestionCard = ({ user, key, followings }) => {     const { userData, handleFetchUsers } = useContext(UserContext);     const [id, setId] = useState(user.id);     const [followed, setFollowed] = useState(false);
    const handleFollow = async () => {         try {             if (!followed) {                 console.log("User id: " + userData.id);                 console.log("followed id: " + id);                 const response = await followService.follow(userData.id, id);                 setFollowed(response.data);                 console.log(response);             } else {                 console.log("Unfollow");             }         } catch (error) {             console.error("Error following user:", error);         }     };
    useEffect(() => {         // Check if the user is in the list of followings\
        const isFollowed = followings.some((item) => {             console.log(item.followe + " and " + user.id);             return item.followed === user.id;         });         // Update the state based on whether the user is followed         setFollowed(isFollowed);         console.log("CHECKINGGGGGG: " + followed);     }, []);
    return (                                                                                 <Image                             cloudName="da0ikowpn"                             // publicId="http://res.cloudinary.com/da0ikowpn/image/upload/v1700754070/wmpl0o8xmngl8ocxzxsv.jpg"                             publicId={user.avatar}                             className="ml-2 w-14 h-14 rounded-full"                             alt="Avatar"                         />                                                                 {user.username}                                                     Suggested for you                                                                             {/* Follow */}                 <button                     className="text-cyan-500 font-semibold cursor-pointer"                     onClick={(e) => {                         handleFollow();                         alert("Đã follow");                     }}                 >                     {followed ? "Đã Follow" : "Follow"}                                         ); };
export default SuggestionCard;
